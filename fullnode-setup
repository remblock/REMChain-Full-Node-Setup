#! /bin/bash

#****************************************************************************************************#
#                                            FULLNODE SETUP                                          #
#****************************************************************************************************#

#----------------------------------------------------------------------------------------------------#
# RUNNING UPDATES AND INSTALLS                                                                       #
#----------------------------------------------------------------------------------------------------#

sudo -S apt update && sudo -S apt upgrade -y
sudo apt install python-pip -y
sudo apt install python-psycopg2 -y
sudo pip install requests
sudo apt-get install jq -y
sudo apt-get install unzip -y
sudo apt-get install libwww-perl libdatetime-perl -y

#----------------------------------------------------------------------------------------------------#
# INSTALL REMNODE PROTOCOL                                                                           #
#----------------------------------------------------------------------------------------------------#

cd ~
wget https://github.com/Remmeauth/remprotocol/releases/download/0.4.1/remprotocol_0.4.1.amd64.deb 
sudo apt install ./remprotocol_0.4.1.amd64.deb

#----------------------------------------------------------------------------------------------------#
# FETCHING GENESIS JSON                                                                              #
#----------------------------------------------------------------------------------------------------#

wget https://remchain.remme.io/genesis.json

#----------------------------------------------------------------------------------------------------#
# SETUP CONFIG DIRECTORY                                                                             #
#----------------------------------------------------------------------------------------------------#

mkdir -p ./config
echo 'plugin = eosio::http_plugin
plugin = eosio::chain_plugin
plugin = eosio::chain_api_plugin
plugin = eosio::net_api_plugin
plugin = eosio::state_history_plugin
state-history-dir = "/data/rem/shpdata"
trace-history = true
chain-state-history = true
state-history-endpoint = 0.0.0.0:8080
abi-serializer-max-time-ms = 15000
chain-state-db-size-mb = 100480
http-validate-host = false
http-server-address = 0.0.0.0:8888
p2p-listen-endpoint = 0.0.0.0:9876
verbose-http-errors = true' > ./config/config.ini

#----------------------------------------------------------------------------------------------------#
# REMOVE SELF FROM PEERS BEFORE APPENDING TO CONFIG                                                  #
#----------------------------------------------------------------------------------------------------#

wget https://raw.githubusercontent.com/remblock/REMChain-Peer-Lists/master/peer-lists/mainnet.ini
cat /root/mainnet.ini >> /root/config/config.ini
rm /root/mainnet.ini

#----------------------------------------------------------------------------------------------------#
# START REMNODE IN THE BACKGROUND                                                                    #
#----------------------------------------------------------------------------------------------------#
# If we need to delete all blocks: (--delete-all-blocks --genesis-json /root/genesis.json)           #
#----------------------------------------------------------------------------------------------------#
# If "database dirty flag set": (--replay-blockchain --hard-replay-blockchain)                       #
#----------------------------------------------------------------------------------------------------#

remnode --config-dir /root/config/ --data-dir /data/rem/ --state-history-dir /data/rem/shpdata --
disable-replay-opts >> /data/rem/remnode.log 2>&1 &

#----------------------------------------------------------------------------------------------------#
# NGINX REVERSE PROXY                                                                                #
#----------------------------------------------------------------------------------------------------#

sudo nginx -t
apt-get install nginx -y
unlink /etc/nginx/sites-enabled/default
echo 'server {
listen 443 ssl;
listen 80 default_server;
listen [::]:80 default_server;
server_name rem.remblock1.io;
client_max_body_size 500m;
access_log /var/log/nginx/rem.remblock1.io.access.log;
error_log /var/log/nginx/rem.remblock1.io.error.log;
add_header "Access-Control-Allow-Origin" "*";
# add_header "Access-Control-Allow-Credentials" "true";
add_header "Access-Control-Allow-Headers" "Origin, X-Requested-With, Content-Type,
Authorization, X-Custom-Header, token, timestamp, version";
add_header "Access-Control-Expose-Headers" "*";
add_header "Access-Control-Allow-Methods" "*";
add_header "Access-Control-Max-Age" 600;
add_header "Allow" "GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, PATCH";
add_header "Vary" "Origin";
location / {
proxy_pass http://127.0.0.1:8888/v1/chain/get_info;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $host;
proxy_redirect off;
proxy_headers_hash_bucket_size 128;
}
location /v2 {
proxy_pass http://127.0.0.1:7000/v2;
add_header "Access-Control-Allow-Origin" "";
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $host;
proxy_redirect off;
proxy_headers_hash_bucket_size 128;
}
location /v1/history {
proxy_pass http://127.0.0.1:7000/v1/history;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $host;
proxy_redirect off;
proxy_headers_hash_bucket_size 128;
}
location /v1 {
proxy_pass http://127.0.0.1:8888;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $host;
proxy_redirect off;
proxy_headers_hash_bucket_size 128;
}
}' > /etc/nginx/sites-available/reverse-proxy.conf
sudo ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/
sudo systemctl restart nginx
sudo systemctl enable nginx

#----------------------------------------------------------------------------------------------------#
# INSTALL AND INIT SSL CERTIFCATE                                                                    #
#----------------------------------------------------------------------------------------------------#

sudo apt-get install software-properties-common -y
sudo add-apt-repository universe
sudo add-apt-repository ppa:certbot/certbot -y
sudo apt-get update
sudo apt-get install certbot python-certbot-nginx -y
sudo certbot --nginx --noninteractive --agree-tos --email contact@remblock.io --domains remblock1.io
sudo certbot renew --dry-run

#----------------------------------------------------------------------------------------------------#
# START PROCESSES                                                                                    #
#----------------------------------------------------------------------------------------------------#

#----------------------------------------------------------------------------------------------------#
# SET ENVIRONMENT VARIABLES                                                                          #
#----------------------------------------------------------------------------------------------------#

nohup ~/history-tools/build/combo-rocksdb --rdb-database /data/rocksdb &> /dev/null &

#----------------------------------------------------------------------------------------------------#
# RESTART ALL PROCESSES ON REBOOT                                                                    #
#----------------------------------------------------------------------------------------------------#

echo '#!/bin/bash
sudo resize2fs /dev/nvme1n1
remnode --config-dir /root/config/ --data-dir /data/rem/ --state-history-dir /data/rem/shpdata --
disable-replay-opts >> /data/rem/remnode.log 2>&1 &
exit 0' > /etc/rc.local
sudo chmod +x /etc/rc.local

#----------------------------------------------------------------------------------------------------#
# SETUP GRACEFUL SHUTDOWN                                                                            #
#----------------------------------------------------------------------------------------------------#

echo '#!/bin/sh
remnode_pid=$(pgrep remnode)
if [ ! -z "$remnode_pid" ]; then
if ps -p $remnode_pid > /dev/null; then
kill -SIGINT $remnode_pid
fi
while ps -p $remnode_pid > /dev/null; do
sleep 1
done
fi
' > /root/node_shutdown.sh
echo '[Unit]
Description=Gracefully shut down remnode to avoid database dirty flag
DefaultDependencies=no
After=poweroff.target shutdown.target reboot.target halt.target kexec.target
Requires=network-online.target network.target
[Service]
Type=oneshot
ExecStop=/root/node_shutdown.sh
RemainAfterExit=yes
KillMode=none
[Install]
WantedBy=multi-user.target' > /etc/systemd/system/node_shutdown.service
sudo chmod +x /root/node_shutdown.sh
systemctl daemon-reload
systemctl enable node_shutdown
systemctl restart node_shutdown

#----------------------------------------------------------------------------------------------------#
# CLEANUP INSTALLATION FILES                                                                         #
#----------------------------------------------------------------------------------------------------#

cd ~
sudo apt autoremove -y
sudo rm kibana-7.4.0-amd64.deb \
eosio.cdt_1.6.2-1-ubuntu-18.04_amd64.deb \
remprotocol_0.4.1.amd64.deb

echo "<---FULL NODE SETUP COMPLETE--->"
